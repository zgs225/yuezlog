(define (make-monitored f)
  (let ((counter 0))
    (define (reset)
      (set! counter 0)
      counter)
    (define (incr)
      (set! counter (+ counter 1)))
    (define (invoke arg)
      (incr)
      (f arg))
    (define (dispatch m)
      (cond ((eq? m 'how-many-calls?) counter)
            ((eq? m 'reset) (reset))
            (else (invoke m))))
    dispatch))
