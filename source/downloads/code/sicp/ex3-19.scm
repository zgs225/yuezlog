(define (ring? x)
  (define (eq-n-times y z count)
    (cond ((<= count 0) #f)
          ((eq? y z) #t)
          (else (eq-n-times y (cdr z) (- count 1)))))
  (define (iter y count)
    (cond ((null? y) #f)
          ((eq-n-times y x count) #t)
          (else (iter (cdr y) (+ count 1)))))
  (iter x 0))
