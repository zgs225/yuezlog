---
layout: mathjax
title: "sicp-ex1-32"
keywords:
  - 计算机程序的构造和解释,
  - 习题解答,
  - Structure and Interpretation of Computer Programs,
  - 练习1.32
hidden: true
date: 2016-01-13 09:28:24 +0800
comments: true
categories: draft
---

### 问题

a) 请说明，`sum`和`product`都是另一称为`accumulate`的更一般概念的特殊情况，`accumulate`
使用某些一般性的积累函数组合起一系列项：

``` scheme
(accumulate combiner null-value term a next b)
```

`accumulate`取的是与`sum`和`product`一样的项和范围描述参数，再加上一个(两个参数
的)`combiner`过程，它描述如何将当前项与前面各项的积累结果组合起来，另外还有一个
`null-value`参数，它描述在所有的项都用完时的基本值。请写出`accumulate`，并说明我
们能怎样基于简单地调用`accumulate`，定义出`sum`和`product`来。

b) 如果你的`accumulate`过程生成的是一个递归计算过程，那么请写出生成迭代计算过程的过
程。如果它生成一个迭代计算过程，请写出一个生成递归计算过程的过程。

### 解答(a)

{% include_code 迭代accumulate过程 lang:scheme sicp/ex1-32-a.scm %}

### 测试

``` scheme
(factorial 10)
;Value: 3628800

(factorial 6)
;Value: 720

(factorial 3)
;Value: 6

(define (indentity x) x)

(define (next x) (+ x 1))

(sum indentity 1 next 10)
;Value: 55

(sum indentity 1 next 100)
;Value: 5050
```

### 解答(b)

{% include_code 递归accumulate过程 lang:scheme sicp/ex1-32-b.scm %}

### 测试

``` scheme
(sum indentity 1 next 100)
;Value: 5050

(sum indentity 1 next 10)
;Value: 55
```
