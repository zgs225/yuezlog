---
layout: mathjax
title: "sicp-ex3-11"
keywords:
  - 计算机程序的构造和解释,
  - 习题解答,
  - Structure and Interpretation of Computer Programs,
date: 2016-07-05 06:07:55 +0800
comments: true
hidden: true
categories: draft
---

### 问题

在3.2.3节里我们看到，环境模型能如何用于描述带有局部状态的过程行为，现在我们又看到局部定义如何工作。一个典型的消息传递过程包含这两个方面。现在请考虑3.1.1节的银行账户过程：

``` scheme
(define (make-account balance)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch m)
    (cond ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m))))
  dispatch)
```

请设法展示由下面交互序列生成的环境结构：

``` scheme
(define acc (make-account 50))

((acc 'deposit) 40)
90

((acc 'withdraw) 60)
30
```

`acc`的局部状态保存在哪里？假定我们定义了另一个账户：

``` scheme
(define acc2 (make-account 100))
```

这两个账户的局部状态是如何保持不同的？环境结构中的哪些部分被`acc`和`acc2`共享？

### 解答

其生成的环境结构如下：

{% lazy_img lazy no-shadow photos/sicp/调用环境结构.png 600 600 练习3.11 %}

由上图可以看到`acc`的局部状态保存在环境`E1`中。

如果定义另一个账户`acc2`，那么它将创建一个和环境`E1`类似的环境作为它的局部变量保存环境。`acc`和`acc2`都是共享全局环境的。
