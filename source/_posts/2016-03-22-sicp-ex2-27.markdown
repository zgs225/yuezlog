---
layout: mathjax
title: "sicp-ex2-27"
keywords:
  - 计算机程序的构造和解释,
  - 习题解答,
  - Structure and Interpretation of Computer Programs,
date: 2016-03-22 23:24:53 +0800
comments: true
hidden: true
categories: draft
---

### 问题

修改练习2.18中的`reverse`过程，得到一个`deep-reverse`过程。它以一个表为参数，返
回另一个表作为值，结果表中的元素反转过来，其中的子树也反转。例如：

``` scheme
(define x (list (list 1 2) (list 3 4)))

x
((1 2) (3 4))

(reverse x)
((3 4) (1 2))

(deep-reverse x)
((4 3) (2 1))
```

### 解答

{% include_code 练习2.27 lang:scheme sicp/ex2-27.scm %}

### 测试

``` scheme
(define x (list (list 1 2) (list 3 4)))
;Value: x

(deep-reverse x)
;Value 68: ((4 3) (2 1))

(deep-reverse (list 1 3 (list 2 (list 3 4))))
;Value 69: (((4 3) 2) 3 1)
```
