---
layout: mathjax
title: "sicp-ex2-28"
keywords:
  - 计算机程序的构造和解释,
  - 习题解答,
  - Structure and Interpretation of Computer Programs,
date: 2016-03-23 07:19:48 +0800
comments: true
hidden: true
categories: draft
---

### 问题

写一个过程`fringe`，它以一个树（表示为表）为参数，返回一个表，表中的元素是这棵树
中所有的树叶，按照从左到右的顺序。例如：

``` scheme
(define x (list (list 1 2) (list 3 4)))

(fringe x)
(1 2 3 4)

(fringe (list x x))
(1 2 3 4 1 2 3 4)
```

### 解答

遍历这棵树的所有叶子节点时，会遇到三种情况：

+ 当树为空的时候，返回空表
+ 当树为叶子节点的时候，返回只具有单个元素的列表
+ 叶子有左右两颗子树的时候，对左右子树元素进行累加

{% include_code 练习2.28 lang:scheme sicp/ex2-28.scm %}

### 测试

``` scheme
(define x (list (list 1 2) (list 3 4)))
;Value: x

(fringe x)
;Value 18: (1 2 3 4)

(fringe (list x x))
;Value 19: (1 2 3 4 1 2 3 4)

(fringe (list 1 (list 3 4 (list 4 5 6) (list 3 4))))
;Value 21: (1 3 4 4 5 6 3 4)
```
